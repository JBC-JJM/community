server:
  port: 8080  #端口号
  servlet:
    context-path: /community  #根url

#域名
community:
  path:
    #域名
    domain: http://localhost:8080
    #头像上传
    upload: d:/workplace/JavaWeb_Video/Project/community/other_data/upload

# wk
wk:
  image:
    command: D:/user_workplace/wkhtmltopdf/bin/wkhtmltoimage #程序位置
    storage: D:/workplace/JavaWeb_Video/Project/community/other_data/wk-images #图片位置

# caffeine
caffeine:
  posts:
    max-size: 15 #缓存的的帖子数量
    expire-seconds: 180 #缓存有效时间

##actuator,默认启动两个端点：健康状态actuator/health；actuator/info
management:
  endpoints:
    web:
      exposure:
        exclude: info,caches #除了

spring:
  # ThymeleafProperties模板
  thymeleaf:
    cache: false #关闭缓存，不然看不见实时的页面
    mode: HTML #非严格的html,需要导包
    encoding: utf-8
    servlet:
      content-type: text/html
  #数据库连接,这里其实比较任意出错
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
    username: root
    password: 123456
    #光！：连接池
    type: com.zaxxer.hikari.HikariDataSource  #数据源的类型，这其实是连接池创建的了
    hikari:
      maximum-pool-size: 15 #连接对象上限# 最大连接数 默认10
      minimum-idle: 5 # 最小空闲连接数量
      idle-timeout: 30000 # 空闲连接存活最大时间 默认600000ms30000毫秒
  #mail的配置
  mail:
    #域名端口
    host: smtp.163.com
    port: 465
    #账号
    username: jumpupchen@163.com
    #网易授权码
    password: ******
    protocol: smtps    #加密协议
    properties:
      mail.smtp.ssl.enable: true    #ssl安全连接
  #reids
  redis:
    database: 0
    host: localhost
    port: 6379
    password:
    lettuce:
      pool:
        max-active: 8  #最大连接
        max-idle: 8   #最大空闲连接
        min-idle: 0   #最小空闲连接
        max-wait: 100ms #连接等待时间
  #kafka
  kafka:
    bootstrap-servers: "localhost:9092"
    #消费者
    consumer:
      group-id: "test-consumer-group"
      enable-auto-commit: true #？
      auto-commit-interval: 3000 #3秒
  #ES
  data:
    elasticsearch:
      cluster-name: nowcoder #集群名称？
      cluster-nodes: 127.0.0.1:9300 #节点：使用tcp端口
  #线程池
  task:
    #普通：浏览器自动访问->创建线程
    execution:
      pool:
        core-size: 5 #核心线程数量
        max-size: 15 #最大线程数
        queue-capacity: 100 #线程不足时，队列缓存的最大任务数量
    #定时器：往往固定线程干活
    scheduling:
      pool:
        size: 5 #线程数量
  # QuartzProperties:任务调度，有默认配置，使用10个线程，但是默认不会持久化到数据库
  quartz:
    job-store-type: jdbc #底层存放数据的方式
    scheduler-name: communityScheduler #调度器名称
    properties:
      org.quartz.scheduler.instanceId: AUTO #调度器id自动生成
      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX #任务存放数据库的类
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #驱动
      org.quartz.jobStore.isClustered: true #使用集群
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool #线程池，默认的
      org.quartz.threadPool.threadCount: 5 #线程数量，默认10



#mybatis配置
mybatis:
  mapper-locations: classpath:mapper/*.xml  #扫描xml文件，由于xml和dao的接口文件不在同一报下
  type-aliases-package: com.nowcoder.community.entity #扫描实体类，简化包名
  configuration:
    useGeneratedKeys: true  #自动生成主键，大概是返回主键回填
    mapUnderscoreToCamelCase: true #返回值的映射，可以自动my_name转化为myName（底层就是mapResult）

#控制台输出日志的级别，可以看到sql语句（不过是更大的范围）
#logging:
#  level.com.nowcoder.community: debug
